2.3 Deletes, Updates and Long-Latency Finds in the LSM-tree

We note that deletes can share with inserts the valuable properties of deferral and batching.
우리는 삭제는 지연 및 일괄 처리의 중요한 속성을 삽입하여 공유할 수 있음에 주목해야 합니다.

When an indexed row is deleted, if a key value entry is not found in the appropriate position in the c0 tree, 
a delete node entry can be placed in that position, also indexed by the key value, 
but nothing an entry Row ID (RID) to delete.
인덱스된 행(row)이 삭제될때, 키의 값이 C0 tree 의 적절한 포지션에서 발견되지 못하면, 
삭제 노드 엔트리는 그 위치에 배치될 수 있으며 또한 키 값에 의해 인덱스될 수 있습니다.
하지만 삭제하기 위한 Row ID 로는 아무것도 하지 않습니다.
(Merge processing 을 할때를 생각하면서 위의 글을 읽어보라)

The actual delete can be done at a later time during the rolling merge process, when the actual index entry is encountered:
index entry 를 마주치게되었을때 실제 삭제는 나중에 rolling merge process 동안에 완료될 수 있습니다:

we say the delete node entry migrates out to larger components during merge and annihilates the associated entry 
when it is encountered.

